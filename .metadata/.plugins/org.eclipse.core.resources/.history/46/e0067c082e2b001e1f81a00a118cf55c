package com.empleados.service.controlador;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.empleados.service.entidades.Empleado;
import com.empleados.service.servicio.EmpleadoService;

@RestController
@RequestMapping("/empleado")
public class EmpleadoController {
	@Autowired
	private EmpleadoService empleadoService;
	
	@GetMapping
	public ResponseEntity<List<Empleado>> listarEmpleados(){
		List<Empleado> empleados = empleadoService.getAll();
		if(empleados.isEmpty()) {
			return ResponseEntity.noContent().build();
		}
		return ResponseEntity.ok(empleados);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Empleado> obtenerEmpleado(@PathVariable("id") int id){
		Empleado empleado= empleadoService.getEmpleadoById(id);
		if(docente == null) {
			return ResponseEntity.notFound().build();
		}
		return ResponseEntity.ok(docente);
	}
	
	@PostMapping
	public ResponseEntity<Docentes> guardarDocente(@RequestBody Docentes docente){
		Docentes nuevoDocente = docentesService.save(docente);
		return ResponseEntity.ok(nuevoDocente);
	}
	
	@GetMapping("/universidad/{universidadId}")
	public ResponseEntity<List<Docentes>> listarDocentesPorUniversidadId(@PathVariable("universidadId") int id){
		List<Docentes> docentes = docentesService.byUniversidadId(id);
		if(docentes.isEmpty()) {
			return ResponseEntity.noContent().build();
		}
		return ResponseEntity.ok(docentes);
	}
}
